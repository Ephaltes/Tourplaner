<UserControl x:Class="frontend.Views.HomeView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:local="clr-namespace:frontend.Views"
			 xmlns:constants="clr-namespace:frontend"
			 xmlns:language="clr-namespace:frontend.Languages"
             xmlns:custom_controls="clr-namespace:frontend.UserControls"
			 mc:Ignorable="d"
			 d:DesignHeight="450" d:DesignWidth="800">

	<UserControl.Resources>
		
		<Style x:Key="SearchBox" TargetType="{x:Type TextBox}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="BorderThickness" Value="0.4"/>
			<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="5,0,0,0" />
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="FontSize" Value="16" />
			<Setter Property="CaretBrush" Value="White" />
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Border x:Name="border" 
								Background="{TemplateBinding Background}" 
								BorderThickness="{TemplateBinding BorderThickness}" 
								BorderBrush="{TemplateBinding BorderBrush}" 
								SnapsToDevicePixels="True"
								CornerRadius="4">
							<Grid>
								<TextBlock x:Name="placeholder" Text="{TemplateBinding Tag}" 
											Visibility="Collapsed"  IsHitTestVisible="False" Opacity="0.5"
											Foreground="{TemplateBinding Foreground}" 
											Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
											HorizontalAlignment="Stretch"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											TextAlignment="{TemplateBinding TextAlignment}"/>
								<ScrollViewer x:Name="PART_ContentHost" 
										  Focusable="false" 
										  HorizontalScrollBarVisibility="Hidden" 
										  VerticalScrollBarVisibility="Hidden"
										  />
							</Grid>
						</Border>
						
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Opacity" TargetName="border" Value="1"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Text" Value="" />
									<Condition Property="IsKeyboardFocusWithin" Value="False" />
								</MultiTrigger.Conditions>
								<Setter Property="Visibility" Value="Visible" TargetName="placeholder" />
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
						<Condition Property="IsSelectionActive" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
				</MultiTrigger>
			</Style.Triggers>
		</Style>
		

	 
		<!--https://stackoverflow.com/questions/37095415/wpf-scrollbar-styles-->
		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="8" Margin="0,0,0,0"/>

						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Cursor" Value="Hand" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
			<Grid>
				<Border  CornerRadius="2" Background="Transparent" />
				<Track Name="PART_Track"  IsDirectionReversed="true">
					<Track.Thumb>
						<Thumb Style="{StaticResource ScrollBarThumb}" 
							   Margin="1,0,1,0"
							   Background="{x:Static constants:Constants.BackgroundColor}" 
							   BorderBrush="{x:Static constants:Constants.BackgroundColor}" />
					</Track.Thumb>
				</Track>
			</Grid>
		</ControlTemplate>
		<ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
			<Grid>
				<Border CornerRadius="2" Background="Transparent"/>
				<Track Name="PART_Track" IsDirectionReversed="False">
					<Track.Thumb>
						<Thumb Style="{StaticResource ScrollBarThumb}" 
							   Margin="0,1,0,1" 
							   Background="{x:Static constants:Constants.BackgroundColor}" 
							   BorderBrush="{x:Static constants:Constants.BackgroundColor}" />
					</Track.Thumb>
				</Track>
			</Grid>
		</ControlTemplate>
		<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Horizontal">
					<Setter Property="Width" Value="Auto"/>
					<Setter Property="Height" Value="18" />
					<Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
				</Trigger>
				<Trigger Property="Orientation" Value="Vertical">
					<Setter Property="Width" Value="18"/>
					<Setter Property="Height" Value="Auto" />
					<Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollViewer}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<ScrollContentPresenter Grid.Column="1"/>
							<ScrollBar Name="PART_VerticalScrollBar" 
									   Value="{TemplateBinding VerticalOffset}" 
									   Maximum="{TemplateBinding ScrollableHeight}" 
									   ViewportSize="{TemplateBinding ViewportHeight}" 
									   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
									   Grid.Column="1"
									   HorizontalAlignment="Right"/>
							<ScrollBar Name="PART_HorizontalScrollBar" 
									   Orientation="Horizontal" 
									   Grid.Row="1" 
									   Grid.Column="0"
									   Grid.ColumnSpan="2"
									   Value="{TemplateBinding HorizontalOffset}" 
									   Maximum="{TemplateBinding ScrollableWidth}" 
									   ViewportSize="{TemplateBinding ViewportWidth}" 
									   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>




		<SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>

		<Style x:Key="RouteStyle" TargetType="{x:Type ListView}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
			<Setter Property="BorderThickness" Value="0.4"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="Bd" 
								Background="{TemplateBinding Background}" 
								BorderThickness="{TemplateBinding BorderThickness}" 
								BorderBrush="{TemplateBinding BorderBrush}" 
								Padding="1" SnapsToDevicePixels="true"
								CornerRadius="4">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}"
										  Style="{StaticResource FavsScrollViewer}"
										  >
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		
		
		
		<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
		<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
		<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
		<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
		<SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
		<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
		<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
		<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
		<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
		<Style x:Key="CommandButton" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{x:Static constants:Constants.BackgroundColor}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="FontSize" Value="16" />
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border"
								Background="{TemplateBinding Background}"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								SnapsToDevicePixels="true"
								CornerRadius="8"
								Margin="1">
							<ContentPresenter x:Name="contentPresenter" 
											  Focusable="False" 
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
											  Margin="{TemplateBinding Padding}" 
											  RecognizesAccessKey="True" 
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{x:Static constants:Constants.BackgroundHighlightColor}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<Style x:Key="IconButton" TargetType="{x:Type Button}">
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="HorizontalAlignment" Value="Right" />
			<Setter Property="FontSize" Value="16" />
			<Setter Property="Width" Value="24" />
			<Setter Property="Height" Value="24" />
			<Setter Property="Margin" Value="0,0,10,0" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="{TemplateBinding Background}">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Cursor" Value="Hand" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


	</UserControl.Resources>
	
	<Grid>
		<Grid>
			
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="100*"  />
				<ColumnDefinition Width="5*"  />
				<ColumnDefinition Width="100*"  />
			</Grid.ColumnDefinitions>

			<Border Grid.Column="0"
					CornerRadius="20" 
					Background="{x:Static constants:Constants.SideMenuColor}">
				<Grid Margin="20">
					<Grid.RowDefinitions>
						<RowDefinition Height="5*" />
						<RowDefinition Height="90*" />
						<RowDefinition Height="5*" />
					</Grid.RowDefinitions>

					<TextBox Grid.Column="0" Grid.Row="0"
							 Style="{StaticResource SearchBox}"
							 Tag="Search..."
							 >
					</TextBox>

					<Grid  Grid.Column="0" Grid.Row="1" Grid.RowSpan="2">

						<Grid.RowDefinitions>
							<RowDefinition Height="100*" />
							<RowDefinition Height="8*" />
						</Grid.RowDefinitions>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="1*"  />
							<ColumnDefinition Width="1*"  />
							<ColumnDefinition Width="1*"  />
							<ColumnDefinition Width="1*"  />
						</Grid.ColumnDefinitions>

						<ListView Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4"
							  Style="{DynamicResource RouteStyle}"
							  Margin="0,10,0,0"
							  Background="Transparent"
							  SelectionMode="Single"
							  HorizontalContentAlignment="Stretch"
							  ItemsSource="{Binding Routes}"
                              SelectedItem="{Binding SelectedRoute}">
							<ListView.ItemTemplate>
								<DataTemplate>
									<Border BorderThickness="0,0,0,1" BorderBrush="Gray" >
										<Grid>
											<Grid.RowDefinitions>
												<RowDefinition Height="1*" />
												<RowDefinition Height="1*" />
											</Grid.RowDefinitions>

											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="100*" />
												<ColumnDefinition  Width="1*" />
												<ColumnDefinition  Width="1*" />
												<ColumnDefinition  Width="1*" />
											</Grid.ColumnDefinitions>

											<TextBlock Grid.Row="0"
												   Grid.Column="0"
												   VerticalAlignment="Center"
												   FontSize="16"
												   Text="{Binding Name}">
											</TextBlock>
											<TextBlock Grid.Row="1"
												   Grid.Column="0"
												   Margin="0,0,0,5"
												   FontSize="14"
												   Text="{Binding Description}">

											</TextBlock>

											<Button Grid.Row="0"
													Grid.Column="1"
													Style="{StaticResource IconButton}"
													 Command="{Binding RelativeSource=
																{RelativeSource FindAncestor, 
																AncestorType={x:Type ListView}}, 
																Path= DataContext.TestCommand}"
													CommandParameter="{Binding Id}"
													>
												<Button.Background>
													<ImageBrush ImageSource="../icons/export.png"
																Stretch="None" />
												</Button.Background>
											</Button>

											<Button Grid.Row="0"
													Grid.Column="2"
													Style="{StaticResource IconButton}"
													 Command="{Binding RelativeSource=
																{RelativeSource FindAncestor, 
																AncestorType={x:Type ListView}}, 
																Path= DataContext.TestCommand}"
													CommandParameter="{Binding Id}"
													>
												<Button.Background>
													<ImageBrush ImageSource="../icons/edit.png"
																Stretch="None" />
												</Button.Background>
											</Button>
											<Button Grid.Row="0"
													Grid.Column="3"
													Style="{DynamicResource IconButton}"
													Margin="0,0,10,0"
													 Command="{Binding RelativeSource=
																{RelativeSource FindAncestor, 
																AncestorType={x:Type ListView}}, 
																Path= DataContext.TestCommand}"
													CommandParameter="{Binding Id}"
													>
												<Button.Background>
													<ImageBrush ImageSource="../icons/delete.png"
																Stretch="None" />
												</Button.Background>
											</Button>
										</Grid>
									</Border>
								</DataTemplate>
							</ListView.ItemTemplate>
						</ListView>

						<Button Grid.Row="1" Grid.Column="0" Style="{StaticResource CommandButton}" Margin="0,5,20,0" Content="{x:Static language:Strings.bt_add}" />
						<Button Grid.Row="1" Grid.Column="1" Style="{StaticResource CommandButton}" Margin="0,5,20,0" Content="{x:Static language:Strings.bt_edit}" />
						<Button Grid.Row="1" Grid.Column="3" Style="{StaticResource CommandButton}" Margin="20,5,0,0" Content="{x:Static language:Strings.bt_delete}" /> 

					</Grid>
				</Grid>
				
			</Border>

			<Border Grid.Column="2"
					CornerRadius="20" 
					Background="{x:Static constants:Constants.SideMenuColor}">
				<Grid Margin="20">
					<Grid.RowDefinitions>
						<RowDefinition Height="5*" />
						<RowDefinition Height="90*" />
						<RowDefinition Height="5*" />
					</Grid.RowDefinitions>

                    <custom_controls:tabcontrol_menu_uc Grid.Row="0" Grid.RowSpan="2" DataContext="{Binding SelectedRoute}" />

                    <!--<Button Grid.Column="0" Grid.Row="0">Exportieren</Button>
					<Button Grid.Column="0" Grid.Row="1" Margin="0,10,0,10">Exportieren</Button>
					<Button Grid.Column="0" Grid.Row="2">Exportieren</Button>-->
				</Grid>
			</Border>


		</Grid>
	</Grid>
</UserControl>
