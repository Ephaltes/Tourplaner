<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="SearchBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0.4"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="CaretBrush" Value="White" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" 
								Background="{TemplateBinding Background}" 
								BorderThickness="{TemplateBinding BorderThickness}" 
								BorderBrush="{TemplateBinding BorderBrush}" 
								SnapsToDevicePixels="True"
								CornerRadius="4">
                        <Grid>
                            <TextBlock x:Name="placeholder" Text="{TemplateBinding Tag}" 
											Visibility="Collapsed"  IsHitTestVisible="False" Opacity="0.5"
											Foreground="{TemplateBinding Foreground}" 
											Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
											HorizontalAlignment="Stretch"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											TextAlignment="{TemplateBinding TextAlignment}"/>
                            <ScrollViewer x:Name="PART_ContentHost" 
										  Focusable="false" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  HorizontalScrollBarVisibility="Hidden" 
										  VerticalScrollBarVisibility="Hidden"
										  />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="placeholder" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextInput" TargetType="{x:Type TextBox}">
        <Style.Resources>
            <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="FontSize" Value="16"/>
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0.4"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Left" />
            <Setter Property="Padding" Value="10,0,0,0" />
            <Setter Property="Margin" Value="0,5,0,5" />
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="CaretBrush" Value="White" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="ToolTip">
                <Setter.Value>
                    <Binding RelativeSource="{RelativeSource Self}" Path="(Validation.Errors)[0].ErrorContent" />
                </Setter.Value>
            </Setter>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" 
								Background="{TemplateBinding Background}" 
								BorderThickness="{TemplateBinding BorderThickness}" 
								BorderBrush="{TemplateBinding BorderBrush}" 
								SnapsToDevicePixels="True"
								CornerRadius="4">
                            <Grid>
                                <TextBlock x:Name="placeholder" Text="{TemplateBinding Tag}" 
											Visibility="Collapsed"  IsHitTestVisible="False" Opacity="0.5"
											Foreground="{TemplateBinding Foreground}" 
											Margin="{TemplateBinding BorderThickness}" 
                                            Padding="{TemplateBinding Padding}"
											HorizontalAlignment="Stretch"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											TextAlignment="{TemplateBinding TextAlignment}"/>
                                <ScrollViewer x:Name="PART_ContentHost" 
										  Focusable="false" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
										  HorizontalScrollBarVisibility="Hidden" 
										  VerticalScrollBarVisibility="Hidden"
										  />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value="" />
                                    <Condition Property="IsKeyboardFocusWithin" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" TargetName="placeholder" />
                            </MultiTrigger>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="BorderBrush" Value="Red" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

    
</ResourceDictionary>